apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-server
  namespace: springbit
  labels:
    app: kafka-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-server
  template:
    metadata:
      labels:
        app: kafka-server
    spec:
      containers:
        - name: kafka-server
          image: bitnami/kafka:latest
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /bitnami/kafka
              name: kafka-server-volume
          env:
            - name: KAFKA_KRAFT_MODE
              value: "true"  # Enable KRaft mode
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "INSIDE://kafka-server:9093"
            - name: KAFKA_LISTENERS
              value: "INSIDE://0.0.0.0:9093"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL
              value: "PLAINTEXT"
            - name: KAFKA_LISTENER_NAME_INSIDE
              value: "INSIDE"
            - name: KAFKA_LISTENER_PORT_INSIDE
              value: "9093"
            - name: KAFKA_LISTENER_INTERFACE
              value: "INSIDE"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: ""  # Kafka without Zookeeper (KRaft mode)
            - name: KAFKA_BROKER_ID
              value: "1"
            - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
          ports:
            - containerPort: 9093
      volumes:
        - name: kafka-server-volume
          persistentVolumeClaim:
            claimName: kafka-server-volume
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: springbit.org/volume
                    operator: In
                    values:
                      - "yes"
