# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
        
    - name: Run generation scripts
      run: |
         # Install vault and set up data
         wget -O - https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
         echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
         sudo apt update && sudo apt install vault
         # Run the cert and vault generation
         cd scripts
         chmod u+x gen_key_stores.sh init_vault.sh
         ./gen_key_stores.sh
         ./init_vault.sh
      shell: bash
      
      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
    - name: Install cosign
      if: github.event_name != 'pull_request'
      uses: sigstore/cosign-installer@6e04d228eb30da1757ee4e1dd75a0ec73a653e06 #v3.1.1
      with:
        cosign-release: 'v2.1.1'

    - uses: actions/checkout@v4
    - name: Run web-app tests with npm and Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: 'web-app/package-lock.json'
    - run: |
        cd web-app
        npm ci
        npm run build  -- --base-href=/web-app/ --configuration=production
        npm test -- --browsers ChromeHeadless --watch=false
        cd ..
        
    - name: Run tests with Maven
      run: |
        mvn --file pom.xml clean verify
  
    - name: Build docker containers with Maven
      if: github.event_name != 'pull_request'
      run: |
        mvn --file pom.xml clean install

    - uses: actions/checkout@v4
    - name: login to docker hub
      env:
        username: ${{secrets.DOCKERHUB_USERNAME}}
        password: ${{secrets.DOCKERHUB_PASSWORD}}
      run: |
        docker login -u $username -p $password
    
    - name: push the docker images
      run: |
        docker tag springbit/spring-bit-config:latest ${{secrets.DOCKERHUB_USERNAME}}/spring-bit-config:latest
        docker push ${{secrets.DOCKERHUB_USERNAME}}/spring-bit-config:latest
        docker tag springbit/spring-bit-gateway:latest ${{secrets.DOCKERHUB_USERNAME}}/spring-bit-gateway:latest
        docker push ${{secrets.DOCKERHUB_USERNAME}}/spring-bit-gateway:latest
        docker tag springbit/spring-bit-discovery:latest ${{secrets.DOCKERHUB_USERNAME}}/spring-bit-discovery:latest
        docker push ${{secrets.DOCKERHUB_USERNAME}}/spring-bit-discovery:latest        
        docker tag springbit/spring-bit-crypto:latest ${{secrets.DOCKERHUB_USERNAME}}/spring-bit-crypto:latest
        docker push ${{secrets.DOCKERHUB_USERNAME}}/spring-bit-crypto:latest
