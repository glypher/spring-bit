spring:
  application:
    name: spring-bit-gateway
  security:
    oauth2:
      client:
        registration:
          github:
            clientId:
            clientSecret:
          facebook:
            client-id:
            client-secret:
          keycloak:
            client-id: springbit-openid
            client-secret:
            authorization-grant-type: authorization_code
            redirect-uri: "http://localhost:8080/login/oauth2/code/springbit-openid"
            scope: openid
            provider: keycloak

        provider:
          facebook:
            user-info-uri: https://graph.facebook.com/me?fields=id,name,picture

          keycloak:
            authorization-uri: http://localhost:8080/keycloak/realms/springbit/protocol/openid-connect/auth
            token-uri: http://localhost:9080/keycloak/realms/springbit/protocol/openid-connect/token
            user-info-uri: http://localhost:9080/keycloak/realms/springbit/protocol/openid-connect/userinfo
            jwk-set-uri: http://localhost:9080/keycloak/realms/springbit/protocol/openid-connect/certs
            user-name-attribute: name

#            authorization-uri: http://localhost:8080/keycloak/realms/springbit/protocol/openid-connect/auth

---
spring:
  config:
    activate:
      on-profile: default
  cloud:
    gateway:
      routes:
        - id: crypto-service
          uri: http://localhost:8090
          predicates:
            - Path=/api/v1/crypto/**
          filters:
            - StripPrefix=2

        - id: crypto-service-docs
          uri: http://localhost:8090
          predicates:
            - Path=/api/v1/docs/**
          filters:
            - StripPrefix=3
            - RewriteResponseHeader=Location, ^/, /api/v1/docs/

        - id: tracing
          uri: http://localhost:9411
          predicates:
            - Path=/tracing/**
          filters:
            - StripPrefix=1
            - RewriteResponseHeader=Location, /zipkin, /tracing/zipkin

        - id: grafana
          uri: http://localhost:3000
          predicates:
            - Path=/grafana/**
          filters:
            - SetRequestHostHeader=localhost:8080

        - id: prometheus
          uri: http://localhost:9090
          predicates:
            - Path=/prometheus/**
          filters:
            - StripPrefix=1

        - id: keycloak
          uri: http://localhost:9080
          predicates:
            - Path=/keycloak/**
          filters:
            - StripPrefix=0

    discovery:
      enabled: false

spring-bit:
  public-domain: http://localhost:8080

management:
  prometheus:
    metrics:
      export:
        enabled: false
  tracing:
    enabled:
      false

# Logging
logging.level.org.springframework: DEBUG
logging.level.org.springframework.cloud.gateway: DEBUG
logging.level.org.springframework.web: DEBUG
logging.level.org.springframework.http: DEBUG
logging.level.org.springframework.web.filter: DEBUG
logging.level.org.springframework.web.reactive.result: DEBUG
logging.level.org.springframework.security: DEBUG

# Config server loads spring-bit-config/src/main/resources/microservices/spring-bit-gateway-production.yml
