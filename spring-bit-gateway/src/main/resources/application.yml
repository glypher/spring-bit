spring:
  application:
    name: spring-bit-gateway
  security:
    oauth2:
      client:
        registration:
          springbit-openid:
            provider: springbit-openid-server
            client-id: springbit-openid
            client-secret: "secret"
            authorization-grant-type: authorization_code
            redirect-uri: "${spring-bit.auth.gateway}/login/oauth2/code/{registrationId}"
            scope: openid, profile, monitoring.read
            client-name: springbit-openid
        provider:
          springbit-openid-server:
            issuer-uri: ${spring-bit.auth.server}

---
spring:
  config:
    activate:
      on-profile: default
  cloud:
    gateway:
      routes:
        - id: crypto-service
          uri: http://localhost:8090
          predicates:
            - Path=/api/v1/crypto/**
          filters:
            - StripPrefix=2

        - id: crypto-service-docs
          uri: http://localhost:8090
          predicates:
            - Path=/api/v1/docs/**
          filters:
            - StripPrefix=3
            - RewriteResponseHeader=Location, ^/, /api/v1/docs/
    discovery:
      enabled: false

spring-bit:
  auth:
    gateway: http://localhost:8080
    server: http://localhost:9443


management:
  prometheus:
    metrics:
      export:
        enabled: false
  tracing:
    enabled:
      false

# Logging
logging.level.org.springframework: INFO
logging.level.org.springframework.security: INFO

# Config server loads spring-bit-config/src/main/resources/microservices/spring-bit-gateway-production.yml
